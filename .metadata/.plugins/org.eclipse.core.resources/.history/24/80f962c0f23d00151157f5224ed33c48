package database;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.AnnotationConfiguration;

import daos.InvoicesDAO;

public class DatabaseService {
	private SessionFactory sessionFactory;

	public DatabaseService(SessionFactory sessionFactory) {
		this.sessionFactory = sessionFactory;
	}

	
	public InvoicesDAO getInvoice(String name)
	{
		if(createSessionFactory())
		{
			
			Session session = this.sessionFactory.openSession();
			
			try{
		         Transaction tx = session.beginTransaction();
		         
		         InvoicesDAO invoicesDAO = session.get(InvoicesDAO.class, name);
		         
		         tx.commit();
		      }catch (HibernateException e) {
		         if (tx!=null) tx.rollback();
		         e.printStackTrace(); 
		      }finally {
		         session.close(); 
		      }
			
		}
		
		
	}

	private boolean createSessionFactory() {
		boolean created = false;
		try {
			sessionFactory = new AnnotationConfiguration().configure()
					.addAnnotatedClass(InvoicesDAO.class).buildSessionFactory();
			created = true;
		} catch (Throwable ex) {
			System.err.println("Failed to create sessionFactory object." + ex);
			throw new ExceptionInInitializerError(ex);
		}
		return created;

	}
}
